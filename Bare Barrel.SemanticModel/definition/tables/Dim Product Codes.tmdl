table 'Dim Product Codes'
	lineageTag: 832e376b-a445-4b36-a1d4-9f1295586bc1

	column asin
		dataType: string
		lineageTag: cb9a7038-9c7f-4360-8af4-1f2d3715f400
		summarizeBy: none
		sourceColumn: asin

		annotation SummarizationSetBy = Automatic

	column product_type
		dataType: string
		lineageTag: 10168281-cd2b-4825-853e-485519691bea
		summarizeBy: none
		sourceColumn: product_type

		annotation SummarizationSetBy = Automatic

	column parent_code
		dataType: string
		lineageTag: c8814a20-f0ca-4828-bc34-f7bba5329b7d
		summarizeBy: none
		sourceColumn: parent_code

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

	column shaker_code
		dataType: string
		isHidden
		lineageTag: db78a895-0da8-45fb-bc37-2f5c4cb53e1b
		summarizeBy: none
		sourceColumn: shaker_code

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

	column product_code
		dataType: string
		lineageTag: 6469d6aa-f968-493d-9aba-807b2d3d6b36
		summarizeBy: none
		sourceColumn: product_code

		annotation SummarizationSetBy = Automatic

	column sku
		dataType: string
		lineageTag: 738cdcb5-d6da-48b5-9be7-0e637b0b5ec6
		summarizeBy: none
		sourceColumn: sku

		annotation SummarizationSetBy = Automatic

	column parent_shaker_code
		dataType: string
		lineageTag: 3b7eca4e-b82a-4fdd-8e7e-4bdf15bb881f
		summarizeBy: none
		sourceColumn: parent_shaker_code

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

	partition 'Dim Product Codes' = m
		mode: import
		source =
				let
				    Source = PostgreSQL.Database("edgepify.app", "ecommerce", [HierarchicalNavigation=true]),
				    listings_items = Source{[Schema="listings_items"]}[Data],
				    summaries1 = listings_items{[Name="summaries"]}[Data],
				    #"Sorted Rows" = Table.Sort(summaries1,{{"updated_at", Order.Descending}, {"sku", Order.Ascending}}),
				    #"Removed Duplicates" = Table.Distinct(#"Sorted Rows", {"asin"}),
				    #"Removed Other Columns" = Table.SelectColumns(#"Removed Duplicates",{"sku", "asin", "product_type"}),
				    #"Inserted Text Between Delimiters" = Table.AddColumn(#"Removed Other Columns", "Text Between Delimiters", each Text.BetweenDelimiters([sku], "_", "-"), type text),
				    #"Renamed Columns" = Table.RenameColumns(#"Inserted Text Between Delimiters",{{"Text Between Delimiters", "parent_code"}}),
				    #"Inserted Text Between Delimiters1" = Table.AddColumn(#"Renamed Columns", "Text Between Delimiters", each Text.BetweenDelimiters([sku], "-", "-"), type text),
				    #"Renamed Columns1" = Table.RenameColumns(#"Inserted Text Between Delimiters1",{{"Text Between Delimiters", "shaker_code"}}),
				    #"Inserted Merged Column" = Table.AddColumn(#"Renamed Columns1", "parent_shaker_code", each Text.Combine({[parent_code], "-", [shaker_code]}), type text),
				    #"Inserted Text After Delimiter" = Table.AddColumn(#"Inserted Merged Column", "Text After Delimiter", each Text.AfterDelimiter([sku], "SL_"), type text),
				    #"Renamed Columns2" = Table.RenameColumns(#"Inserted Text After Delimiter",{{"Text After Delimiter", "long_product_code"}}),
				    #"Inserted First Characters" = Table.AddColumn(#"Renamed Columns2", "First Characters", each Text.Start([long_product_code], 3), type text),
				    #"Renamed Columns3" = Table.RenameColumns(#"Inserted First Characters",{{"First Characters", "product_code"}}),
				    #"Removed Columns" = Table.RemoveColumns(#"Renamed Columns3",{"long_product_code"}),
				    #"Filtered Rows" = Table.SelectRows(#"Removed Columns", each ([shaker_code] <> ""))
				in
				    #"Filtered Rows"

	annotation PBI_ResultType = Exception

	annotation PBI_NavigationStepName = Navigation

